@page "/{SlideIndex:int?}"
@using System.Collections.Immutable
@inject NavigationManager NavigationManager

<Presentation>
    @if (SlideIndex >= 0 && SlideIndex < slides.Count)
    {
        <DynamicComponent Type="slides[SlideIndex]" />
    }
    else
    {
        <TitleSlide>
            <h1>That's it!</h1>
        </TitleSlide>
    }
</Presentation>

<div class="controls">
    <button @onclick="GoToPreviousSlide">←</button>
    <span>@SlideIndex</span>
    <button @onclick="GoToNextSlide">→</button>
</div>

@code {
    private static readonly ImmutableList<Type> slides = ImmutableList.Create(
        typeof(A1_Title),
        typeof(A1b_Agenda),
        typeof(A2_ReactiveProgramming),
        typeof(A3_ReactiveProgramming_Examples_Excel),
        typeof(A4_ReactiveProgramming_Examples_Svelte),
        typeof(A5_Rx),
        typeof(S1_FirstSteps),
        typeof(S2_Termination),
        typeof(S3_WhereToGetObservables),
        typeof(S4_Subjects),
        typeof(S1_DebugSample),
        typeof(Z0_HandsOn),
        typeof(Z1_Resources_RxMarbles),
        typeof(Z2_Resources_DecisionTree)
    );

    [Parameter]
    public int SlideIndex { get; set; } = 0;

    private void GoToNextSlide()
    {
        SlideIndex++;
        NavigationManager.NavigateTo($"/{SlideIndex}");
    }

    private void GoToPreviousSlide()
    {
        SlideIndex = Math.Max(0, SlideIndex - 1);
        NavigationManager.NavigateTo($"/{SlideIndex}");
    }
}