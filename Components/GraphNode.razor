@if (Id is not null)
{
    <div class="graph-node" style="left: @(Position.X)px; top: @(Position.Y)px; width: @(Size)px; height: @(Size)px;">
        @ChildContent
    </div>
}

@code {
    [Parameter]
    public object? Id { get; set; }

    [Parameter]
    public Vector2 Position { get; set; }

    [Parameter]
    public int Size { get; set; } = 50;

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [CascadingParameter]
    public GraphView? Graph { get; set; }

    public override async Task SetParametersAsync(ParameterView parameters)
    {
        var oldId = Id;

        await base.SetParametersAsync(parameters);

        if (Id != oldId)
        {
            if (oldId is not null)
                Graph?.RemoveNode(oldId);

            if (Id is not null)
                Graph?.AddNode(Id, this);
        }
    }
}